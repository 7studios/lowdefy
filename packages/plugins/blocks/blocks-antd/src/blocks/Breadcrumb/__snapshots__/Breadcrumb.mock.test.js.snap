// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mock render - default - value[0] - Breadcrumb 1`] = `
Array [
  Array [
    Object {
      "children": Array [],
      "className": "{}",
      "id": "default",
      "separator": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.list.icon - value[0] - Breadcrumb 1`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link={
              Object {
                "icon": "SaveOutlined",
                "label": "label 1",
              }
            }
          >
            <IconComp1
              basePath=""
              blockId="properties.list.icon_0_icon"
              components={Object {}}
              content={Object {}}
              events={Object {}}
              list={Array []}
              menus={Array []}
              methods={
                Object {
                  "makeCssClass": [Function],
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
              properties={
                Object {
                  "name": "SaveOutlined",
                  "style": Object {
                    "paddingRight": 8,
                  },
                }
              }
              required={false}
              user={Object {}}
              validation={
                Object {
                  "errors": Array [],
                  "status": null,
                  "warnings": Array [],
                }
              }
            />
            label 1
          </ItemLink>
        </mockConstructor>,
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link={
              Object {
                "icon": "DeleteOutlined",
                "label": "label 2",
              }
            }
          >
            <IconComp1
              basePath=""
              blockId="properties.list.icon_1_icon"
              components={Object {}}
              content={Object {}}
              events={Object {}}
              list={Array []}
              menus={Array []}
              methods={
                Object {
                  "makeCssClass": [Function],
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
              properties={
                Object {
                  "name": "DeleteOutlined",
                  "style": Object {
                    "paddingRight": 8,
                  },
                }
              }
              required={false}
              user={Object {}}
              validation={
                Object {
                  "errors": Array [],
                  "status": null,
                  "warnings": Array [],
                }
              }
            />
            label 2
          </ItemLink>
        </mockConstructor>,
      ],
      "className": "{}",
      "id": "properties.list.icon",
      "separator": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.list.icon with onClick - value[0] - Breadcrumb 1`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          onClick={[Function]}
        >
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{\\"cursor\\":\\"pointer\\"},null]}"
            link={
              Object {
                "icon": "SaveOutlined",
                "label": "label 1",
              }
            }
          >
            <IconComp1
              basePath=""
              blockId="properties.list.icon with onClick_0_icon"
              components={Object {}}
              content={Object {}}
              events={
                Object {
                  "onClick": Array [],
                }
              }
              list={Array []}
              menus={Array []}
              methods={
                Object {
                  "makeCssClass": [Function],
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
              properties={
                Object {
                  "name": "SaveOutlined",
                  "style": Object {
                    "paddingRight": 8,
                  },
                }
              }
              required={false}
              user={Object {}}
              validation={
                Object {
                  "errors": Array [],
                  "status": null,
                  "warnings": Array [],
                }
              }
            />
            label 1
          </ItemLink>
        </mockConstructor>,
        <mockConstructor
          onClick={[Function]}
        >
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{\\"cursor\\":\\"pointer\\"},null]}"
            link={
              Object {
                "icon": "DeleteOutlined",
                "label": "label 2",
              }
            }
          >
            <IconComp1
              basePath=""
              blockId="properties.list.icon with onClick_1_icon"
              components={Object {}}
              content={Object {}}
              events={
                Object {
                  "onClick": Array [],
                }
              }
              list={Array []}
              menus={Array []}
              methods={
                Object {
                  "makeCssClass": [Function],
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
              properties={
                Object {
                  "name": "DeleteOutlined",
                  "style": Object {
                    "paddingRight": 8,
                  },
                }
              }
              required={false}
              user={Object {}}
              validation={
                Object {
                  "errors": Array [],
                  "status": null,
                  "warnings": Array [],
                }
              }
            />
            label 2
          </ItemLink>
        </mockConstructor>,
      ],
      "className": "{}",
      "id": "properties.list.icon with onClick",
      "separator": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.list.label strings - value[0] - Breadcrumb 1`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link="Page One"
          >
            Page One
          </ItemLink>
        </mockConstructor>,
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link="Page two"
          >
            Page two
          </ItemLink>
        </mockConstructor>,
      ],
      "className": "{}",
      "id": "properties.list.label strings",
      "separator": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.list.pageId - value[0] - Breadcrumb 1`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link={
              Object {
                "pageId": "page1",
              }
            }
          >
            page1
          </ItemLink>
        </mockConstructor>,
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link={
              Object {
                "pageId": "page2",
              }
            }
          >
            page2
          </ItemLink>
        </mockConstructor>,
      ],
      "className": "{}",
      "id": "properties.list.pageId",
      "separator": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.list.pageId label and url - value[0] - Breadcrumb 1`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link={
              Object {
                "pageId": "page1",
                "url": "https://www.url.com",
              }
            }
          >
            page1
          </ItemLink>
        </mockConstructor>,
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link={
              Object {
                "label": "label url",
                "url": "https://www.url.com",
              }
            }
          >
            label url
          </ItemLink>
        </mockConstructor>,
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link={
              Object {
                "label": "label pageId",
                "pageId": "page2",
              }
            }
          >
            label pageId
          </ItemLink>
        </mockConstructor>,
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link={
              Object {
                "pageId": "page3",
                "url": "https://docs.url.com",
              }
            }
          >
            page3
          </ItemLink>
        </mockConstructor>,
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link={
              Object {
                "label": "label4",
              }
            }
          >
            label4
          </ItemLink>
        </mockConstructor>,
      ],
      "className": "{}",
      "id": "properties.list.pageId label and url",
      "separator": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.list.style - value[0] - Breadcrumb 1`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},{\\"color\\":\\"blue\\"}]}"
            link={
              Object {
                "label": "Page One",
                "style": Object {
                  "color": "blue",
                },
              }
            }
          >
            Page One
          </ItemLink>
        </mockConstructor>,
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},{\\"color\\":\\"red\\"}]}"
            link={
              Object {
                "label": "Page two",
                "style": Object {
                  "color": "red",
                },
              }
            }
          >
            Page two
          </ItemLink>
        </mockConstructor>,
      ],
      "className": "{}",
      "id": "properties.list.style",
      "separator": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.list.url - value[0] - Breadcrumb 1`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link={
              Object {
                "url": "https://www.url.com",
              }
            }
          >
            https://www.url.com
          </ItemLink>
        </mockConstructor>,
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link={
              Object {
                "url": "https://docs.url.com",
              }
            }
          >
            https://docs.url.com
          </ItemLink>
        </mockConstructor>,
      ],
      "className": "{}",
      "id": "properties.list.url",
      "separator": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.separator - value[0] - Breadcrumb 1`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link={
              Object {
                "label": "Page One",
              }
            }
          >
            Page One
          </ItemLink>
        </mockConstructor>,
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link={
              Object {
                "label": "Page two",
              }
            }
          >
            Page two
          </ItemLink>
        </mockConstructor>,
      ],
      "className": "{}",
      "id": "properties.separator",
      "separator": "->",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.style: fontSize: 18 - value[0] - Breadcrumb 1`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link={
              Object {
                "label": "Page One",
              }
            }
          >
            Page One
          </ItemLink>
        </mockConstructor>,
        <mockConstructor>
          <ItemLink
            Link={[Function]}
            basePath=""
            className="{\\"style\\":[{},null]}"
            link={
              Object {
                "label": "Page two",
              }
            }
          >
            Page two
          </ItemLink>
        </mockConstructor>,
      ],
      "className": "{\\"style\\":{\\"fontSize\\":18}}",
      "id": "properties.style: fontSize: 18",
      "separator": undefined,
    },
    Object {},
  ],
]
`;
